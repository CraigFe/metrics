(** {2:graphs Metric Graphs} *)

(** The type for metric {{!graphs}graphs}. *)
type t = Graph_type.t

val title : t -> string option
(** [title t] is [t]'s title. *)

val ylabel : t -> string option
(** [title t] is [t]'s Y label. *)

val yunit : t -> string option
(** [unit t] is [t]'s Y unit. *)

val id : t -> int
(** [id t] is [t]'s unit. *)

val v : ?title:string -> ?ylabel:string -> ?yunit:string -> unit -> t
(** [v ()] is a new graph. *)

val list : unit -> t list
(** [list ()] is the list of graphs. *)

val fields : t -> (Src.t * Field.t) list
(** [fields t] is the list of [t]'s fields. Field names are unique for a
    given source. *)

val add_field : t -> Src.t -> Field.t -> unit
(** [add_field t src f] adds the field [f], generated by the source [src], to
    the graph [t]. *)

val remove_field : t -> Src.t -> string -> unit
(** [remove_field t src f] removes the field named [f], generated from the
    source [src], out of the graph [t]. *)

val enable : t -> unit
val disable : t -> unit
val is_active : t -> bool
